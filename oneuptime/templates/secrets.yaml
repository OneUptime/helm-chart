apiVersion: v1
kind: Secret
metadata:
  name: {{ printf "%s-%s" $.Release.Name "secrets"  }}
  annotations:
    "helm.sh/resource-policy": "keep"
type: Opaque
data:
  ## Secrets Change when the release is upgraded
  ## https://github.com/helm/helm-www/issues/1259
  ## This is a workaround to keep the secrets unchanged
  {{- if .Release.IsUpgrade }}

  internal-smtp: {{ index (lookup "v1" "Secret" $.Release.Namespace (printf "%s-secrets" $.Release.Name)).data "internal-smtp" }}
  oneuptime-secret: {{ index (lookup "v1" "Secret" $.Release.Namespace (printf "%s-secrets" $.Release.Name)).data "oneuptime-secret" }}
  encryption-secret: {{ index (lookup "v1" "Secret" $.Release.Namespace (printf "%s-secrets" $.Release.Name)).data "encryption-secret" }}

  {{- range $key, $val := $.Values.probes }}
  {{- if (index (lookup "v1" "Secret" $.Release.Namespace (printf "%s-secrets" $.Release.Name)).data (printf "probe-%s" $key)) }}
  {{printf "probe-%s" $key}}: {{ (index (lookup "v1" "Secret" $.Release.Namespace (printf "%s-secrets" $.Release.Name)).data (printf "probe-%s" $key)) }}
  {{ else }}
  {{printf "probe-%s" $key}}: {{ randAlphaNum 32 | b64enc | quote }}
  {{- end }}
  {{- end }}

  {{ else }} # install operation

  internal-smtp: {{ randAlphaNum 32 | b64enc | quote }}
  oneuptime-secret: {{ randAlphaNum 32 | b64enc | quote }}
  encryption-secret: {{ randAlphaNum 32 | b64enc | quote }}


  {{- range $key, $val := $.Values.probes }}
  {{printf "probe-%s" $key}}: {{ randAlphaNum 32 | b64enc | quote }}
  {{- end }}

  {{ end }}

---

{{- if not $.Values.postgresql.enabled }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ printf "%s-%s" $.Release.Name "external-postgres"  }}
  annotations:
    "helm.sh/resource-policy": "keep"
type: Opaque
data:

  key: "postgres"

  {{- if $.Values.externalPostgres.password }}
  ## Add secret here for externalPostgresPassword
  password: {{ $.Values.externalPostgres.password | b64enc | quote }}
  {{- end }}

  {{- if $.Values.externalPostgres.ssl.enabled -}}
  ## Add secret here for externalPostgresPassword
  {{- if $.Values.externalPostgres.ssl.ca }}
  ssl-ca: {{ printf "%s" $.Values.externalPostgres.ssl.ca | b64enc | quote }}
  {{- end }}

  {{- if $.Values.externalPostgres.ssl.cert }}
  ssl-cert: {{ printf "%s" $.Values.externalPostgres.ssl.cert | b64enc | quote }}
  {{- end }}

  {{- if $.Values.externalPostgres.ssl.key }}
  ssl-key: {{ printf "%s" $.Values.externalPostgres.ssl.key | quote | b64enc | quote }}
  {{- end }}

  {{- end -}}

{{- end }}
---


## External Redis Configuration
{{- if not $.Values.redis.enabled }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ printf "%s-%s" $.Release.Name "external-redis"  }}
  annotations:
    "helm.sh/resource-policy": "keep"
type: Opaque
data:

  key: "redis"
  {{- if $.Values.externalRedis.password }}
  ## Add secret here for externalRedisPassword
  password: {{ $.Values.externalRedis.password | b64enc | quote }}
  {{- end }}

  {{- if $.Values.externalRedis.tls.enabled -}}

  ## Add secret here for externalRedisPassword
  {{- if $.Values.externalRedis.tls.ca }}
  tls-ca: {{ printf "%s" $.Values.externalRedis.tls.ca | b64enc | quote }}
  {{- end }}


  {{- if $.Values.externalRedis.tls.cert }}
  tls-cert: {{ printf "%s" $.Values.externalRedis.tls.cert | b64enc | quote }}
  {{- end }}

  {{- if $.Values.externalRedis.tls.key }}
  tls-key: {{ printf "%s" $.Values.externalRedis.tls.key | quote | b64enc | quote }}
  {{- end }}

  {{- end -}}

{{- end }}
---


# Clickhouse Configuration
{{- if not $.Values.clickhouse.enabled }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ printf "%s-%s" $.Release.Name "external-clickhouse"  }}
  annotations:
    "helm.sh/resource-policy": "keep"
type: Opaque
stringData:
  key: "clickhouse"

  {{- if $.Values.externalClickhouse.password }}
  ## Add secret here for clickhousePassword
  password: {{ $.Values.externalClickhouse.password | quote }}
  {{- end }}

  ## Add TLS secret here for clickhouse
  {{- if $.Values.externalClickhouse.tls.enabled -}}
  {{- if $.Values.externalClickhouse.tls.ca }}
  tls-ca: {{ printf "%s" $.Values.externalClickhouse.tls.ca | quote }}
  {{- end }}

  {{- if $.Values.externalClickhouse.tls.cert }}
  tls-cert: {{ printf "%s" $.Values.externalClickhouse.tls.cert | quote }}
  {{- end }}

  {{- if $.Values.externalClickhouse.tls.key }}
  tls-key: {{ printf "%s" $.Values.externalClickhouse.tls.key | quote }}
  {{- end }}

  {{- end -}}

{{- end }}
---
  
  